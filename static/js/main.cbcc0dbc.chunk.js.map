{"version":3,"sources":["fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","getAnalytics","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSubmit","event","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onChange","target","name","value","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","NweetTextRef","doc","id","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","deleteObject","ref","attachmentUrl","toggleEditing","updateDoc","autoFocus","src","class","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","createAt","Date","now","createId","addDoc","collection","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","onSnapshot","snapshot","nweetArr","docs","map","marginTop","Profile","refreshUser","displayName","newDisplayName","setNewDisplayName","navigate","useNavigate","getMyNweets","where","getDocs","forEach","updateProfile","signOut","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","element","App","init","setInit","setUserObj","onAuthStateChanged","user","currentUser","Object","assign","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbcc0dbc.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/database\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAHVEd9Acj76S7KkDm6_nXzplN1AuEIDko\",\r\n  authDomain: \"nwitter-4e2b8.firebaseapp.com\",\r\n  databaseURL: \"https://nwitter-4e2b8-default-rtdb.firebaseio.com\",\r\n  projectId: \"nwitter-4e2b8\",\r\n  storageBucket: \"nwitter-4e2b8.appspot.com\",\r\n  messagingSenderId: \"989179895666\",\r\n  appId: \"1:989179895666:web:7139c5856837c2ddb5c7eb\",\r\n  measurementId: \"G-51B4359MYC\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport default app;\r\nconst analytics = getAnalytics(app);\r\n\r\nexport const authService = getAuth();\r\nexport const dbService = getFirestore();\r\nexport const storageService = getStorage();\r\n","import { authService } from \"fBase\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n} from \"firebase/auth\";\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState([\"\"]);\r\n  const [password, setPassword] = useState([\"\"]);\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await createUserWithEmailAndPassword(\r\n          authService,\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (e) {\r\n      setError(e.message);\r\n    }\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"authInput authSubmit\"\r\n          value={newAccount ? \"Create Account\" : \"SignIn\"}\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"SignIn\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService } from \"fBase\";\r\nimport {\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new GithubAuthProvider();\r\n    }\r\n    const data = await signInWithPopup(authService, provider);\r\n    console.log(data);\r\n  };\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fBase\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { deleteObject, ref } from \"firebase/storage\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const NweetTextRef = doc(dbService, \"nweets\", `${nweetObj.id}`);\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await deleteDoc(NweetTextRef);\r\n      await deleteObject(ref(storageService, nweetObj.attachmentUrl));\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(NweetTextRef, {\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              autoFocus\r\n              required\r\n              onChange={onChange}\r\n              className=\"formInput\"\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n          </form>\r\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n            Cancel\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div class=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { dbService, storageService } from \"fBase\";\r\nimport { addDoc, collection } from \"firebase/firestore\";\r\nimport { getDownloadURL, uploadString, ref } from \"firebase/storage\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await uploadString(\r\n        attachmentRef,\r\n        attachment,\r\n        \"data_url\"\r\n      );\r\n      attachmentUrl = await getDownloadURL(response.ref);\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createAt: Date.now(),\r\n      createId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await addDoc(collection(dbService, \"nweets\"), nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n    // await addDoc(collection(dbService, \"nweets\"), {\r\n    //   text: nweet,\r\n    //   createAt: Date.now(),\r\n    //   createId: userObj.uid,\r\n    // });\r\n    // setNweet(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachmentClick = () => setAttachment(\"\");\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachmentClick}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import Nweet from \"components/Nweet\";\r\nimport { dbService, storageService } from \"fBase\";\r\nimport { orderByPriority } from \"firebase/database\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  query,\r\n  orderBy,\r\n  onSnapshot,\r\n} from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getDownloadURL, ref, uploadString } from \"firebase/storage\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    const q = query(\r\n      collection(dbService, \"nweets\"),\r\n      orderBy(\"createAt\", \"desc\")\r\n    );\r\n    onSnapshot(q, (snapshot) => {\r\n      const nweetArr = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArr);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.createId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { authService, dbService } from \"fBase\";\r\nimport { updateProfile } from \"firebase/auth\";\r\nimport { collection, getDocs, orderBy, query, where } from \"firebase/firestore\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const navigate = useNavigate();\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    navigate(\"/\");\r\n    refreshUser();\r\n  };\r\n  const getMyNweets = async () => {\r\n    const q = query(\r\n      collection(dbService, \"nweets\"),\r\n      where(\"createId\", \"==\", userObj.uid),\r\n      orderBy(\"createAt\")\r\n    );\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      console.log(doc.id, \"=>\", doc.data());\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(userObj, { displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input\r\n          onChange={onChange}\r\n          autoFocus\r\n          type=\"text\"\r\n          placeholder=\"Display Name\"\r\n          value={newDisplayName}\r\n          className=\"formInput\"\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Update Profile\"\r\n          className=\"formBtn\"\r\n          style={{\r\n            marginTop: 10,\r\n          }}\r\n        />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n        </Link>\r\n      </li>\r\n      <li>\r\n        <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n);\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Auth from \"../routes/Auth\";\r\nimport Home from \"../routes/Home\";\r\nimport Profile from \"../routes/Profile\";\r\nimport Navigation from \"./Navigation\";\r\nimport \"../styles.css\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <div\r\n        style={{\r\n          maxWidth: 890,\r\n          width: \"100%\",\r\n          margin: \"0 auto\",\r\n          marginTop: 80,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Routes>\r\n          {isLoggedIn ? (\r\n            <>\r\n              <Route exact path=\"/\" element={<Home userObj={userObj} />} />\r\n              <Route\r\n                exact\r\n                path=\"/profile\"\r\n                element={\r\n                  <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                }\r\n              />\r\n            </>\r\n          ) : (\r\n            <Route exact path=\"/\" element={<Auth />} />\r\n          )}\r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router.js\";\nimport { authService } from \"../fBase.js\";\nimport { updatePassword } from \"firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj(user);\n        // setUserObj({\n        //   displayName: user.displayName,\n        //   uid: user.uid,\n        //   updateProfile: (args) => user.updateProfile(args);\n        // });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj(Object.assign({}, user));\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport app from \"./fBase\"\n\nconsole.log(app)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}